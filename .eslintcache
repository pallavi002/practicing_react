[{"F:\\projects\\learning\\my-app\\src\\index.js":"1","F:\\projects\\learning\\my-app\\src\\reportWebVitals.js":"2","F:\\projects\\learning\\my-app\\src\\App.js":"3","F:\\projects\\learning\\my-app\\src\\Career\\Career.js":"4","F:\\projects\\learning\\my-app\\src\\Hobby\\hobby.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":3329,"mtime":1611333519511,"results":"9","hashOfConfig":"7"},{"size":530,"mtime":1611223764254,"results":"10","hashOfConfig":"7"},{"size":318,"mtime":1611167020795,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"o63903",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"F:\\projects\\learning\\my-app\\src\\index.js",[],["24","25"],"F:\\projects\\learning\\my-app\\src\\reportWebVitals.js",[],"F:\\projects\\learning\\my-app\\src\\App.js",["26","27","28","29"],"import React, { Component } from 'react';\r\nimport './App.css';\r\nimport career from './Career/Career';\r\nimport Career from './Career/Career'\r\nimport Hobby from './Hobby/hobby'\r\n\r\nclass App extends Component {\r\n  state = {\r\n    careers: [\r\n      { id: \"key01\", course: \"coding\" },\r\n      { id: \"key02\", course: \"finance\" },\r\n      { id: \"key03\", course: \"Dance\" }\r\n    ],\r\n    luck: \"wish good luck?\",\r\n    hobby: [\r\n      { name: \"gaming\" },\r\n      { name: \"singing\" }\r\n    ],\r\n    showCourses: false\r\n  }\r\n  //not using currently\r\n  // switchCareerHandler = (newCourse) => {\r\n  //   this.setState({\r\n  //     careers: [\r\n  //       { id: \"key01\", course: newCourse },\r\n  //       { id: \"key02\", course: \"Human Resources\" },\r\n  //       { id: \"key03\", course: \"Designer\" }\r\n  //     ]\r\n  //   })\r\n  // }\r\n  printGoodLuck = () => {\r\n    this.setState({\r\n      luck: \"Hey good luck !!\"\r\n    })\r\n  }\r\n  careerChangedHandler = (event, id) => {\r\n    let changeId = id;\r\n    if (this.state.careers.id == changeId) {\r\n      this.setState({\r\n        careers: [\r\n          { id: changeId, course: event.target.value }\r\n        ]\r\n      })\r\n    }\r\n\r\n  }\r\n  toggleCourseHandler = () => {\r\n    const doesShow = this.state.showCourses;\r\n    this.setState({ showCourses: !doesShow });\r\n  }\r\n  deleteCareerHandler = (careerIndex) => {\r\n    const careers = this.state.careers.slice();   //copying array instead of just pointing og\r\n    //you cane also do the below ES6 spread operator approach to copy array\r\n    //const careers = [...this.state.careers]\r\n    careers.splice(careerIndex, 1);\r\n    this.setState({careers:careers}) \r\n  }\r\n  render() {\r\n    const style = {\r\n      \"width\": \"40%\",\r\n      \"margin\": \"auto\",\r\n      \"border\": \"2px solid black\",\r\n      \"box-shadow\": \"0 10px 20px aqua\",\r\n      \"padding\": \"16px\",\r\n      \"font-style\": \"italic\",\r\n      \"text-align\": \"center\",\r\n      \"margin-bottom\": \"2%\",\r\n      \"margin-top\": \"2%\"\r\n    }\r\n    const buttonStyle = {\r\n      \"height\": \"50px\",\r\n      \"width\": \"200px\",\r\n      \"background\": \"cadetblue\",\r\n      \"color\": \"white\",\r\n      \"padding\": \"10px\",\r\n      \"font-weight\": \"800\",\r\n      \"border-radius\": \"5px\"\r\n    }\r\n    let courses = null;\r\n    if (this.state.showCourses) {\r\n      courses = (\r\n        <div>\r\n          {this.state.careers.map((career, index) => {\r\n            return <Career course={career.course} click={() => this.deleteCareerHandler(index)} key={career.id} careerChanged={(event) => this.careerChangedHandler(event, career.id)}/>\r\n          })}\r\n          {/* <Career course={this.state.careers[0].course} careerChanged={this.careerChangedHandler} />\r\n        <Career course={this.state.careers[1].course} clicked={this.switchCareerHandler.bind(this, \"Just sleeping\")} style={style} />\r\n        <Career course={this.state.careers[2].course} clickGoodLuck={this.printGoodLuck} luck={this.state.luck}>Go for MBA</Career>\r\n        <Hobby hobby={this.state.hobby[0].name} />\r\n        <Hobby hobby={this.state.hobby[1].name}>Testing hobby component children props.</Hobby> */}\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <h1>Hi..Start working on your Career.</h1>\r\n        <button onClick={this.toggleCourseHandler} style={buttonStyle}>TOGGLE CAREER</button>\r\n        {courses}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","F:\\projects\\learning\\my-app\\src\\Career\\Career.js",[],"F:\\projects\\learning\\my-app\\src\\Hobby\\hobby.js",[],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":3,"column":8,"nodeType":"36","messageId":"37","endLine":3,"endColumn":14},{"ruleId":"34","severity":1,"message":"38","line":5,"column":8,"nodeType":"36","messageId":"37","endLine":5,"endColumn":13},{"ruleId":"39","severity":1,"message":"40","line":38,"column":31,"nodeType":"41","messageId":"42","endLine":38,"endColumn":33},{"ruleId":"34","severity":1,"message":"43","line":59,"column":11,"nodeType":"36","messageId":"37","endLine":59,"endColumn":16},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'career' is defined but never used.","Identifier","unusedVar","'Hobby' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'style' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]